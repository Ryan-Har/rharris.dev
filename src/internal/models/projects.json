[
    {
        "name": "Adit",
        "description": "Secure peer to peer command line tool for transferring files using webrtc.",
        "content": [
            "Adit is a command-line interface (CLI) tool built with Go that enables users to securely send files to one another over a WebRTC connection. This project is inspired by Magic Wormhole, a similar tool built in Python.",
            "The file sender makes a websocket connection to a relay server, where the phrase is automatically generated and is the reference point for exchanging webRTC information. When the receiver connects using the phrase and information is exchanged, the file is transferred directly between the sender and receiver."
            ],
        "assets": [
            {
                "type": "gif",
                "url": "adit-peek.gif",
                "description": "Animated GIF showing how adit works"
            }
        ],
        "tags": [
            "featured",
            "go",
            "terraform",
            "aws",
            "docker"
        ],
        "links": {
            "github": "https://github.com/Ryan-Har/adit"
        },
        "features": [
            "End-to-End Encryption: Ensures files are securely transmitted between sender and receiver",
            "Peer-to-Peer Transfer: Utilizes WebRTC to create a direct connection between devices",
            "Cross-Platform Support: Works on Windows, macOS, and Linux systems",
            "Automatic Deployment: Server deploys automatically to AWS using Github workflows and Terraform"
        ]
    },
    {
        "name": "Site Monitor",
        "description": "A web based site monitor for http, port and ping uptime checks.",
        "content": [
            "Site Monitor is designed simply to help users monitor the availability and performance of their websites. At its core, the application regularly checks if specified websites are online and operational, sending alerts if any site goes down. This can be particularly useful for small business owners, developers, or anyone managing personal or client websites who want peace of mind that their sites are consistently accessible."
        ],
        "assets": [
            {
                "type": "screenshot",
                "url": "site-monitor-monitors.png",
                "description": "Screenshot of the monitors page for the Site Monitor"
            },
            {
                "type": "screenshot",
                "url": "site-monitor-incidents.png",
                "description": "Screenshot of the incidents page for the Site Monitor"
            }
        ],
        "tags": [
            "featured",
            "go",
            "templ",
            "docker",
            "sql"
        ],
        "links": {
            "github": "https://github.com/Ryan-Har/site-monitor",
            "live": "https://site-monitor.rharris.dev/"
        },
        "features": [
            "User Authentication: Firebase user authentication for secure accounts",
            "Incident history: Incident history is preserved to help understand trends",
            "Notifications: Webhook notifications to alert in real-time to a failure"
        ]
    },
    {
        "name": "Chat Application",
        "description": "A chat application designed for team communication, particularly useful in support environments to manage client interactions and coordinate responses.",
        "content": [
        "This chat application was built for team-based communication, particularly in a support context, similar to the environments used by companies like Just Eat or Amazon.",
        "It enables real-time messaging and status updates, ideal for application support or customer service teams. The backend is structured as a set of microservices written in Go, deployed with Kubernetes and Helm charts. The frontend is built with vanilla JavaScript and styled using Bootstrap."
        ],
        "assets": [
            {
                "type": "screenshot",
                "url": "all-chats.png",
                "description": "Screenshot of the main chat dashboard where users can view active conversations and team status."
            }
        ],
        "tags": [
            "featured",
            "go",
            "js",
            "k8s",
            "helm",
            "postgresql"
        ],
        "links": {
            "github": "https://github.com/Ryan-Har/chat-app"
        },
        "features": [
            "Real-time messaging with WebSockets",
            "Live team and user status updates using Server-Sent Events",
            "Microservices architecture deployed with Kubernetes and Helm charts",
            "Simple and clean interface using vanilla JavaScript and Bootstrap"
        ]
    },
    {
        "name": "rharris.dev personal site",
        "description": "My personal portfolio website, created with the purpose of showcasing my experience and projects",
        "content": [
        "My personal portfolio website, a space dedicated to showcasing my professional journey, technical skills, and the projects I’ve worked on. This site serves as both a portfolio and a testament to my expertise.",
        "Through this website, I aim to provide visitors with a clear understanding of my experience, highlighting key projects that demonstrate my ability to solve complex problems, collaborate with others, and deliver high-quality work. Whether it’s through interactive web applications, creative designs, or technical solutions, each project reflects my commitment to excellence and continuous learning."
        ],
        "tags": [
            "go",
            "templ"
        ],
        "links": {
            "github": "https://github.com/Ryan-Har/rharris.dev",
            "live": "https://rharris.dev"
        },
        "features": [
            "Responsive Design",
            "Interactive Project Gallery",
            "Light and Dark mode toggle"
        ]
    }
]